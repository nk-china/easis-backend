<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nkpro.elcube.docengine.gen.DocIReceivedMapper">
  <resultMap id="BaseResultMap" type="cn.nkpro.elcube.docengine.gen.DocIReceived">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="BILL_TYPE" jdbcType="VARCHAR" property="billType" />
    <id column="CARD_KEY" jdbcType="VARCHAR" property="cardKey" />
    <id column="DOC_ID" jdbcType="VARCHAR" property="docId" />
    <id column="EXPIRE_DATE" jdbcType="BIGINT" property="expireDate" />
    <id column="TARGET_DOC_ID" jdbcType="VARCHAR" property="targetDocId" />
    <result column="BILL_PARTNER_ID" jdbcType="VARCHAR" property="billPartnerId" />
    <result column="DOC_NUMBER" jdbcType="VARCHAR" property="docNumber" />
    <result column="AMOUNT" jdbcType="DOUBLE" property="amount" />
    <result column="RECEIVED" jdbcType="DOUBLE" property="received" />
    <result column="RECEIVABLE" jdbcType="DOUBLE" property="receivable" />
    <result column="CURR_RECEIVED" jdbcType="DOUBLE" property="currReceived" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
    <result column="ACCOUNT_DATE" jdbcType="BIGINT" property="accountDate" />
    <result column="ORDER_BY" jdbcType="INTEGER" property="orderBy" />
    <result column="CREATED_TIME" jdbcType="BIGINT" property="createdTime" />
    <result column="UPDATED_TIME" jdbcType="BIGINT" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    BILL_TYPE, CARD_KEY, DOC_ID, EXPIRE_DATE, TARGET_DOC_ID, BILL_PARTNER_ID, DOC_NUMBER, 
    AMOUNT, RECEIVED, RECEIVABLE, CURR_RECEIVED, STATE, ACCOUNT_DATE, ORDER_BY, CREATED_TIME, 
    UPDATED_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceivedExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nk_doc_i_received
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceivedKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from nk_doc_i_received
    where BILL_TYPE = #{billType,jdbcType=VARCHAR}
      and CARD_KEY = #{cardKey,jdbcType=VARCHAR}
      and DOC_ID = #{docId,jdbcType=VARCHAR}
      and EXPIRE_DATE = #{expireDate,jdbcType=BIGINT}
      and TARGET_DOC_ID = #{targetDocId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceivedKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from nk_doc_i_received
    where BILL_TYPE = #{billType,jdbcType=VARCHAR}
      and CARD_KEY = #{cardKey,jdbcType=VARCHAR}
      and DOC_ID = #{docId,jdbcType=VARCHAR}
      and EXPIRE_DATE = #{expireDate,jdbcType=BIGINT}
      and TARGET_DOC_ID = #{targetDocId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceivedExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from nk_doc_i_received
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceived">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into nk_doc_i_received (BILL_TYPE, CARD_KEY, DOC_ID, 
      EXPIRE_DATE, TARGET_DOC_ID, BILL_PARTNER_ID, 
      DOC_NUMBER, AMOUNT, RECEIVED, 
      RECEIVABLE, CURR_RECEIVED, STATE, 
      ACCOUNT_DATE, ORDER_BY, CREATED_TIME, 
      UPDATED_TIME)
    values (#{billType,jdbcType=VARCHAR}, #{cardKey,jdbcType=VARCHAR}, #{docId,jdbcType=VARCHAR}, 
      #{expireDate,jdbcType=BIGINT}, #{targetDocId,jdbcType=VARCHAR}, #{billPartnerId,jdbcType=VARCHAR}, 
      #{docNumber,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{received,jdbcType=DOUBLE}, 
      #{receivable,jdbcType=DOUBLE}, #{currReceived,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, 
      #{accountDate,jdbcType=BIGINT}, #{orderBy,jdbcType=INTEGER}, #{createdTime,jdbcType=BIGINT}, 
      #{updatedTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceived">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into nk_doc_i_received
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billType != null">
        BILL_TYPE,
      </if>
      <if test="cardKey != null">
        CARD_KEY,
      </if>
      <if test="docId != null">
        DOC_ID,
      </if>
      <if test="expireDate != null">
        EXPIRE_DATE,
      </if>
      <if test="targetDocId != null">
        TARGET_DOC_ID,
      </if>
      <if test="billPartnerId != null">
        BILL_PARTNER_ID,
      </if>
      <if test="docNumber != null">
        DOC_NUMBER,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="received != null">
        RECEIVED,
      </if>
      <if test="receivable != null">
        RECEIVABLE,
      </if>
      <if test="currReceived != null">
        CURR_RECEIVED,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="accountDate != null">
        ACCOUNT_DATE,
      </if>
      <if test="orderBy != null">
        ORDER_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billType != null">
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="cardKey != null">
        #{cardKey,jdbcType=VARCHAR},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=BIGINT},
      </if>
      <if test="targetDocId != null">
        #{targetDocId,jdbcType=VARCHAR},
      </if>
      <if test="billPartnerId != null">
        #{billPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="docNumber != null">
        #{docNumber,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="received != null">
        #{received,jdbcType=DOUBLE},
      </if>
      <if test="receivable != null">
        #{receivable,jdbcType=DOUBLE},
      </if>
      <if test="currReceived != null">
        #{currReceived,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="accountDate != null">
        #{accountDate,jdbcType=BIGINT},
      </if>
      <if test="orderBy != null">
        #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceivedExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from nk_doc_i_received
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update nk_doc_i_received
    <set>
      <if test="record.billType != null">
        BILL_TYPE = #{record.billType,jdbcType=VARCHAR},
      </if>
      <if test="record.cardKey != null">
        CARD_KEY = #{record.cardKey,jdbcType=VARCHAR},
      </if>
      <if test="record.docId != null">
        DOC_ID = #{record.docId,jdbcType=VARCHAR},
      </if>
      <if test="record.expireDate != null">
        EXPIRE_DATE = #{record.expireDate,jdbcType=BIGINT},
      </if>
      <if test="record.targetDocId != null">
        TARGET_DOC_ID = #{record.targetDocId,jdbcType=VARCHAR},
      </if>
      <if test="record.billPartnerId != null">
        BILL_PARTNER_ID = #{record.billPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.docNumber != null">
        DOC_NUMBER = #{record.docNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.received != null">
        RECEIVED = #{record.received,jdbcType=DOUBLE},
      </if>
      <if test="record.receivable != null">
        RECEIVABLE = #{record.receivable,jdbcType=DOUBLE},
      </if>
      <if test="record.currReceived != null">
        CURR_RECEIVED = #{record.currReceived,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.accountDate != null">
        ACCOUNT_DATE = #{record.accountDate,jdbcType=BIGINT},
      </if>
      <if test="record.orderBy != null">
        ORDER_BY = #{record.orderBy,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=BIGINT},
      </if>
      <if test="record.updatedTime != null">
        UPDATED_TIME = #{record.updatedTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update nk_doc_i_received
    set BILL_TYPE = #{record.billType,jdbcType=VARCHAR},
      CARD_KEY = #{record.cardKey,jdbcType=VARCHAR},
      DOC_ID = #{record.docId,jdbcType=VARCHAR},
      EXPIRE_DATE = #{record.expireDate,jdbcType=BIGINT},
      TARGET_DOC_ID = #{record.targetDocId,jdbcType=VARCHAR},
      BILL_PARTNER_ID = #{record.billPartnerId,jdbcType=VARCHAR},
      DOC_NUMBER = #{record.docNumber,jdbcType=VARCHAR},
      AMOUNT = #{record.amount,jdbcType=DOUBLE},
      RECEIVED = #{record.received,jdbcType=DOUBLE},
      RECEIVABLE = #{record.receivable,jdbcType=DOUBLE},
      CURR_RECEIVED = #{record.currReceived,jdbcType=DOUBLE},
      STATE = #{record.state,jdbcType=INTEGER},
      ACCOUNT_DATE = #{record.accountDate,jdbcType=BIGINT},
      ORDER_BY = #{record.orderBy,jdbcType=INTEGER},
      CREATED_TIME = #{record.createdTime,jdbcType=BIGINT},
      UPDATED_TIME = #{record.updatedTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceived">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update nk_doc_i_received
    <set>
      <if test="billPartnerId != null">
        BILL_PARTNER_ID = #{billPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="docNumber != null">
        DOC_NUMBER = #{docNumber,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="received != null">
        RECEIVED = #{received,jdbcType=DOUBLE},
      </if>
      <if test="receivable != null">
        RECEIVABLE = #{receivable,jdbcType=DOUBLE},
      </if>
      <if test="currReceived != null">
        CURR_RECEIVED = #{currReceived,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="accountDate != null">
        ACCOUNT_DATE = #{accountDate,jdbcType=BIGINT},
      </if>
      <if test="orderBy != null">
        ORDER_BY = #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=BIGINT},
      </if>
    </set>
    where BILL_TYPE = #{billType,jdbcType=VARCHAR}
      and CARD_KEY = #{cardKey,jdbcType=VARCHAR}
      and DOC_ID = #{docId,jdbcType=VARCHAR}
      and EXPIRE_DATE = #{expireDate,jdbcType=BIGINT}
      and TARGET_DOC_ID = #{targetDocId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nkpro.elcube.docengine.gen.DocIReceived">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update nk_doc_i_received
    set BILL_PARTNER_ID = #{billPartnerId,jdbcType=VARCHAR},
      DOC_NUMBER = #{docNumber,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      RECEIVED = #{received,jdbcType=DOUBLE},
      RECEIVABLE = #{receivable,jdbcType=DOUBLE},
      CURR_RECEIVED = #{currReceived,jdbcType=DOUBLE},
      STATE = #{state,jdbcType=INTEGER},
      ACCOUNT_DATE = #{accountDate,jdbcType=BIGINT},
      ORDER_BY = #{orderBy,jdbcType=INTEGER},
      CREATED_TIME = #{createdTime,jdbcType=BIGINT},
      UPDATED_TIME = #{updatedTime,jdbcType=BIGINT}
    where BILL_TYPE = #{billType,jdbcType=VARCHAR}
      and CARD_KEY = #{cardKey,jdbcType=VARCHAR}
      and DOC_ID = #{docId,jdbcType=VARCHAR}
      and EXPIRE_DATE = #{expireDate,jdbcType=BIGINT}
      and TARGET_DOC_ID = #{targetDocId,jdbcType=VARCHAR}
  </update>
</mapper>