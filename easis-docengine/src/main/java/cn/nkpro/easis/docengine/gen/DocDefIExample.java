/*
 * This file is part of EAsis.
 *
 * EAsis is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * EAsis is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with EAsis.  If not, see <https://www.gnu.org/licenses/>.
 */
package cn.nkpro.easis.docengine.gen;

import java.util.ArrayList;
import java.util.List;

public class DocDefIExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public DocDefIExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCardKeyIsNull() {
            addCriterion("CARD_KEY is null");
            return (Criteria) this;
        }

        public Criteria andCardKeyIsNotNull() {
            addCriterion("CARD_KEY is not null");
            return (Criteria) this;
        }

        public Criteria andCardKeyEqualTo(String value) {
            addCriterion("CARD_KEY =", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyNotEqualTo(String value) {
            addCriterion("CARD_KEY <>", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyGreaterThan(String value) {
            addCriterion("CARD_KEY >", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyGreaterThanOrEqualTo(String value) {
            addCriterion("CARD_KEY >=", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyLessThan(String value) {
            addCriterion("CARD_KEY <", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyLessThanOrEqualTo(String value) {
            addCriterion("CARD_KEY <=", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyLike(String value) {
            addCriterion("CARD_KEY like", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyNotLike(String value) {
            addCriterion("CARD_KEY not like", value, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyIn(List<String> values) {
            addCriterion("CARD_KEY in", values, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyNotIn(List<String> values) {
            addCriterion("CARD_KEY not in", values, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyBetween(String value1, String value2) {
            addCriterion("CARD_KEY between", value1, value2, "cardKey");
            return (Criteria) this;
        }

        public Criteria andCardKeyNotBetween(String value1, String value2) {
            addCriterion("CARD_KEY not between", value1, value2, "cardKey");
            return (Criteria) this;
        }

        public Criteria andDocTypeIsNull() {
            addCriterion("DOC_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andDocTypeIsNotNull() {
            addCriterion("DOC_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andDocTypeEqualTo(String value) {
            addCriterion("DOC_TYPE =", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeNotEqualTo(String value) {
            addCriterion("DOC_TYPE <>", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeGreaterThan(String value) {
            addCriterion("DOC_TYPE >", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeGreaterThanOrEqualTo(String value) {
            addCriterion("DOC_TYPE >=", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeLessThan(String value) {
            addCriterion("DOC_TYPE <", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeLessThanOrEqualTo(String value) {
            addCriterion("DOC_TYPE <=", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeLike(String value) {
            addCriterion("DOC_TYPE like", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeNotLike(String value) {
            addCriterion("DOC_TYPE not like", value, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeIn(List<String> values) {
            addCriterion("DOC_TYPE in", values, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeNotIn(List<String> values) {
            addCriterion("DOC_TYPE not in", values, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeBetween(String value1, String value2) {
            addCriterion("DOC_TYPE between", value1, value2, "docType");
            return (Criteria) this;
        }

        public Criteria andDocTypeNotBetween(String value1, String value2) {
            addCriterion("DOC_TYPE not between", value1, value2, "docType");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("VERSION is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("VERSION is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(String value) {
            addCriterion("VERSION =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(String value) {
            addCriterion("VERSION <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(String value) {
            addCriterion("VERSION >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(String value) {
            addCriterion("VERSION >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(String value) {
            addCriterion("VERSION <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(String value) {
            addCriterion("VERSION <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLike(String value) {
            addCriterion("VERSION like", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotLike(String value) {
            addCriterion("VERSION not like", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<String> values) {
            addCriterion("VERSION in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<String> values) {
            addCriterion("VERSION not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(String value1, String value2) {
            addCriterion("VERSION between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(String value1, String value2) {
            addCriterion("VERSION not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andBeanNameIsNull() {
            addCriterion("BEAN_NAME is null");
            return (Criteria) this;
        }

        public Criteria andBeanNameIsNotNull() {
            addCriterion("BEAN_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andBeanNameEqualTo(String value) {
            addCriterion("BEAN_NAME =", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotEqualTo(String value) {
            addCriterion("BEAN_NAME <>", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameGreaterThan(String value) {
            addCriterion("BEAN_NAME >", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameGreaterThanOrEqualTo(String value) {
            addCriterion("BEAN_NAME >=", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLessThan(String value) {
            addCriterion("BEAN_NAME <", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLessThanOrEqualTo(String value) {
            addCriterion("BEAN_NAME <=", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLike(String value) {
            addCriterion("BEAN_NAME like", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotLike(String value) {
            addCriterion("BEAN_NAME not like", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameIn(List<String> values) {
            addCriterion("BEAN_NAME in", values, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotIn(List<String> values) {
            addCriterion("BEAN_NAME not in", values, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameBetween(String value1, String value2) {
            addCriterion("BEAN_NAME between", value1, value2, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotBetween(String value1, String value2) {
            addCriterion("BEAN_NAME not between", value1, value2, "beanName");
            return (Criteria) this;
        }

        public Criteria andCardNameIsNull() {
            addCriterion("CARD_NAME is null");
            return (Criteria) this;
        }

        public Criteria andCardNameIsNotNull() {
            addCriterion("CARD_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andCardNameEqualTo(String value) {
            addCriterion("CARD_NAME =", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameNotEqualTo(String value) {
            addCriterion("CARD_NAME <>", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameGreaterThan(String value) {
            addCriterion("CARD_NAME >", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameGreaterThanOrEqualTo(String value) {
            addCriterion("CARD_NAME >=", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameLessThan(String value) {
            addCriterion("CARD_NAME <", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameLessThanOrEqualTo(String value) {
            addCriterion("CARD_NAME <=", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameLike(String value) {
            addCriterion("CARD_NAME like", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameNotLike(String value) {
            addCriterion("CARD_NAME not like", value, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameIn(List<String> values) {
            addCriterion("CARD_NAME in", values, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameNotIn(List<String> values) {
            addCriterion("CARD_NAME not in", values, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameBetween(String value1, String value2) {
            addCriterion("CARD_NAME between", value1, value2, "cardName");
            return (Criteria) this;
        }

        public Criteria andCardNameNotBetween(String value1, String value2) {
            addCriterion("CARD_NAME not between", value1, value2, "cardName");
            return (Criteria) this;
        }

        public Criteria andOrderByIsNull() {
            addCriterion("ORDER_BY is null");
            return (Criteria) this;
        }

        public Criteria andOrderByIsNotNull() {
            addCriterion("ORDER_BY is not null");
            return (Criteria) this;
        }

        public Criteria andOrderByEqualTo(Integer value) {
            addCriterion("ORDER_BY =", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotEqualTo(Integer value) {
            addCriterion("ORDER_BY <>", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByGreaterThan(Integer value) {
            addCriterion("ORDER_BY >", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORDER_BY >=", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByLessThan(Integer value) {
            addCriterion("ORDER_BY <", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByLessThanOrEqualTo(Integer value) {
            addCriterion("ORDER_BY <=", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByIn(List<Integer> values) {
            addCriterion("ORDER_BY in", values, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotIn(List<Integer> values) {
            addCriterion("ORDER_BY not in", values, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByBetween(Integer value1, Integer value2) {
            addCriterion("ORDER_BY between", value1, value2, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotBetween(Integer value1, Integer value2) {
            addCriterion("ORDER_BY not between", value1, value2, "orderBy");
            return (Criteria) this;
        }

        public Criteria andCalcOrderIsNull() {
            addCriterion("CALC_ORDER is null");
            return (Criteria) this;
        }

        public Criteria andCalcOrderIsNotNull() {
            addCriterion("CALC_ORDER is not null");
            return (Criteria) this;
        }

        public Criteria andCalcOrderEqualTo(Integer value) {
            addCriterion("CALC_ORDER =", value, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderNotEqualTo(Integer value) {
            addCriterion("CALC_ORDER <>", value, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderGreaterThan(Integer value) {
            addCriterion("CALC_ORDER >", value, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("CALC_ORDER >=", value, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderLessThan(Integer value) {
            addCriterion("CALC_ORDER <", value, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderLessThanOrEqualTo(Integer value) {
            addCriterion("CALC_ORDER <=", value, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderIn(List<Integer> values) {
            addCriterion("CALC_ORDER in", values, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderNotIn(List<Integer> values) {
            addCriterion("CALC_ORDER not in", values, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderBetween(Integer value1, Integer value2) {
            addCriterion("CALC_ORDER between", value1, value2, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("CALC_ORDER not between", value1, value2, "calcOrder");
            return (Criteria) this;
        }

        public Criteria andCalcTimesIsNull() {
            addCriterion("CALC_TIMES is null");
            return (Criteria) this;
        }

        public Criteria andCalcTimesIsNotNull() {
            addCriterion("CALC_TIMES is not null");
            return (Criteria) this;
        }

        public Criteria andCalcTimesEqualTo(Integer value) {
            addCriterion("CALC_TIMES =", value, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesNotEqualTo(Integer value) {
            addCriterion("CALC_TIMES <>", value, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesGreaterThan(Integer value) {
            addCriterion("CALC_TIMES >", value, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("CALC_TIMES >=", value, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesLessThan(Integer value) {
            addCriterion("CALC_TIMES <", value, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesLessThanOrEqualTo(Integer value) {
            addCriterion("CALC_TIMES <=", value, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesIn(List<Integer> values) {
            addCriterion("CALC_TIMES in", values, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesNotIn(List<Integer> values) {
            addCriterion("CALC_TIMES not in", values, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesBetween(Integer value1, Integer value2) {
            addCriterion("CALC_TIMES between", value1, value2, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andCalcTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("CALC_TIMES not between", value1, value2, "calcTimes");
            return (Criteria) this;
        }

        public Criteria andEditableSpELIsNull() {
            addCriterion("EDITABLE_SP_E_L is null");
            return (Criteria) this;
        }

        public Criteria andEditableSpELIsNotNull() {
            addCriterion("EDITABLE_SP_E_L is not null");
            return (Criteria) this;
        }

        public Criteria andEditableSpELEqualTo(String value) {
            addCriterion("EDITABLE_SP_E_L =", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELNotEqualTo(String value) {
            addCriterion("EDITABLE_SP_E_L <>", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELGreaterThan(String value) {
            addCriterion("EDITABLE_SP_E_L >", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELGreaterThanOrEqualTo(String value) {
            addCriterion("EDITABLE_SP_E_L >=", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELLessThan(String value) {
            addCriterion("EDITABLE_SP_E_L <", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELLessThanOrEqualTo(String value) {
            addCriterion("EDITABLE_SP_E_L <=", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELLike(String value) {
            addCriterion("EDITABLE_SP_E_L like", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELNotLike(String value) {
            addCriterion("EDITABLE_SP_E_L not like", value, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELIn(List<String> values) {
            addCriterion("EDITABLE_SP_E_L in", values, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELNotIn(List<String> values) {
            addCriterion("EDITABLE_SP_E_L not in", values, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELBetween(String value1, String value2) {
            addCriterion("EDITABLE_SP_E_L between", value1, value2, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andEditableSpELNotBetween(String value1, String value2) {
            addCriterion("EDITABLE_SP_E_L not between", value1, value2, "editableSpEL");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagIsNull() {
            addCriterion("MARKDOWN_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagIsNotNull() {
            addCriterion("MARKDOWN_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagEqualTo(Integer value) {
            addCriterion("MARKDOWN_FLAG =", value, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagNotEqualTo(Integer value) {
            addCriterion("MARKDOWN_FLAG <>", value, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagGreaterThan(Integer value) {
            addCriterion("MARKDOWN_FLAG >", value, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("MARKDOWN_FLAG >=", value, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagLessThan(Integer value) {
            addCriterion("MARKDOWN_FLAG <", value, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagLessThanOrEqualTo(Integer value) {
            addCriterion("MARKDOWN_FLAG <=", value, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagIn(List<Integer> values) {
            addCriterion("MARKDOWN_FLAG in", values, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagNotIn(List<Integer> values) {
            addCriterion("MARKDOWN_FLAG not in", values, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagBetween(Integer value1, Integer value2) {
            addCriterion("MARKDOWN_FLAG between", value1, value2, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andMarkdownFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("MARKDOWN_FLAG not between", value1, value2, "markdownFlag");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeIsNull() {
            addCriterion("UPDATED_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeIsNotNull() {
            addCriterion("UPDATED_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeEqualTo(Long value) {
            addCriterion("UPDATED_TIME =", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeNotEqualTo(Long value) {
            addCriterion("UPDATED_TIME <>", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeGreaterThan(Long value) {
            addCriterion("UPDATED_TIME >", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("UPDATED_TIME >=", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeLessThan(Long value) {
            addCriterion("UPDATED_TIME <", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeLessThanOrEqualTo(Long value) {
            addCriterion("UPDATED_TIME <=", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeIn(List<Long> values) {
            addCriterion("UPDATED_TIME in", values, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeNotIn(List<Long> values) {
            addCriterion("UPDATED_TIME not in", values, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeBetween(Long value1, Long value2) {
            addCriterion("UPDATED_TIME between", value1, value2, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeNotBetween(Long value1, Long value2) {
            addCriterion("UPDATED_TIME not between", value1, value2, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefIsNull() {
            addCriterion("COPY_FROM_REF is null");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefIsNotNull() {
            addCriterion("COPY_FROM_REF is not null");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefEqualTo(Integer value) {
            addCriterion("COPY_FROM_REF =", value, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefNotEqualTo(Integer value) {
            addCriterion("COPY_FROM_REF <>", value, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefGreaterThan(Integer value) {
            addCriterion("COPY_FROM_REF >", value, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefGreaterThanOrEqualTo(Integer value) {
            addCriterion("COPY_FROM_REF >=", value, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefLessThan(Integer value) {
            addCriterion("COPY_FROM_REF <", value, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefLessThanOrEqualTo(Integer value) {
            addCriterion("COPY_FROM_REF <=", value, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefIn(List<Integer> values) {
            addCriterion("COPY_FROM_REF in", values, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefNotIn(List<Integer> values) {
            addCriterion("COPY_FROM_REF not in", values, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefBetween(Integer value1, Integer value2) {
            addCriterion("COPY_FROM_REF between", value1, value2, "copyFromRef");
            return (Criteria) this;
        }

        public Criteria andCopyFromRefNotBetween(Integer value1, Integer value2) {
            addCriterion("COPY_FROM_REF not between", value1, value2, "copyFromRef");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nk_doc_def_i
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}